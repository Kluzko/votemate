generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique

  pools Pool[]
}

model Pool {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  question  String
  expiresAt DateTime

  answers  Answer[]
  isPublic Boolean  @default(true)
  password String?

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@index([userId])
}

model Answer {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value String

  votes Vote[]

  Pool   Pool   @relation(fields: [poolId], references: [id], onDelete: Cascade)
  poolId String

  @@index([poolId])
}

model Vote {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Answer   Answer @relation(fields: [answerId], references: [id], onDelete: Cascade)
  answerId String
  voterId  String

  @@unique([answerId, voterId]) // same voter cant vote on same answer
  @@index([answerId])
}
